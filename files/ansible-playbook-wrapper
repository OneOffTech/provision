#!/usr/bin/env bash

#
# Read config, use env or ask for keepass file
# and store it if entered.
#
KEEPASS_FILE_CONFIG=".keepass_file_path"
if [ -z "${KEEPASS}" ] && [ -r "${KEEPASS_FILE_CONFIG}" ]; then
  # shellcheck disable=SC2002
  KEEPASS="$(cat ${KEEPASS_FILE_CONFIG} | xargs)"

  # If the path is empty or does not exist, delete the conf
  if [ -z "${KEEPASS}" ] || [ ! -f "${KEEPASS}" ] || [ ! -r "${KEEPASS}" ]; then
    echo "Stored keepass path '${KEEPASS}' is not readable file,"\
         "deleting configuration file"
    rm "${KEEPASS_FILE_CONFIG}"
    unset KEEPASS
  fi
fi

if [ -z "${KEEPASS}" ]; then
  echo -n "Keepass file path (${KEEPASS}): "
  read -r KEEPASS
fi

if [ -z "${KEEPASS_FILE_CONFIG}" ] || [ ! -f "${KEEPASS}" ] || [ ! -r "${KEEPASS}" ]; then
  >&2 echo "Keepass file '${KEEPASS}' not a readable file, exit"
  exit 1
else
  # If the file seems to exist, store it
  echo "${KEEPASS}" > "${KEEPASS_FILE_CONFIG}"
fi

#
# Ask for the keepass file or use the env var
#
if [ -z "${KEEPASS_PW}" ]; then
  echo -n "Keepass Password: "
  read -ers KEEPASS_PW
  echo ""
fi

if [ -z "${KEEPASS_PW}" ]; then
  >&2 echo "password is empty, exit"
  exit 1
fi

#
# Exec
#

echo "using keepass file: '${KEEPASS}'"
exec env KEEPASS="${KEEPASS}" KEEPASS_PW="${KEEPASS_PW}" python "$(which ansible-playbook)" "$@"
